{
  "total": 31938,
  "per_page": 24,
  "last_page": 1331,
  "page": 3,
  "projects": [
    {
      "id": 46,
      "url": "https://hackaday.io/project/46-hackadayio-project",
      "owner_id": 182178,
      "name": "Hackaday.io Project",
      "summary": "Follow for the 'Hacklet' and latest news about hackaday.io",
      "description": "Official Hackaday.io Project page. Here we post the Hacklet, and updates about Hackaday.io news and developments. \r\n\r\nHave a feedback? Check out our feedback page: http://hackaday.io/project/37-Feedback---Hackaday-Projects\r\n\r\nLooking for help? http://hackaday.io/project/46/log/460",
      "image_url": "https://cdn.hackaday.io/images/1085561390426767411.png",
      "views": 85218,
      "comments": 62,
      "followers": 1088746,
      "skulls": 1606,
      "logs": 99,
      "details": 0,
      "instruction": 0,
      "components": 0,
      "images": 2,
      "created": 1390423511,
      "updated": 1652110526,
      "tags": [
        "had",
        "Hackaday Projects",
        "website",
        "Hacklet",
        "hackaday",
        "ongoing project",
        "official",
        "Hackaday.io"
      ]
    },
    {
      "id": 3800,
      "url": "https://hackaday.io/project/3800-3d-printable-robot-arm",
      "owner_id": 2561,
      "name": "3D Printable Robot Arm",
      "summary": "A printable robot arm, a little bigger than the usual hobby servo once.  ",
      "description": "My printable robot arm is inspired by the well known industry robots, but printable.\r\nThe goal is to develop a open source robot arm to use in private or small businesses and make robot development available for every one.  \r\nThe arm should lift about 2 kg enough to perform every day tasks.  Currently robot arms are expensive or small and weak, or clumpy. \r\nIndustrial robots are expensive and dangerous and for that not suitable for using at home or schools. \r\nA Open Source printable robot can build,used and developed by every one. \r\nRobots are still expensive and hard to operate, but this must not longer be the case. \r\nA cheap 3d printed robot arm could be used by disabled persons to manage their daily needs better and more independent. Operate at dangerous but not so developed places. \r\nRemote controlled you could even us the robot to open your door if you forgot your keys.\r\n\r\nThe future Arm will include a moving base. \r\n",
      "image_url": "https://cdn.hackaday.io/images/848911460535166971.jpg",
      "views": 297063,
      "comments": 113,
      "followers": 2627,
      "skulls": 1546,
      "logs": 19,
      "details": 1,
      "instruction": 1,
      "components": 4,
      "images": 6,
      "created": 1420754811,
      "updated": 1586019024,
      "tags": [
        "hardware",
        "hackadayprize",
        "arduino",
        "robot arm",
        "led",
        "ROBOT",
        "2015HackadayPrize",
        "3D Print",
        "ongoing project"
      ]
    },
    {
      "id": 1313,
      "url": "https://hackaday.io/project/1313-openmv",
      "owner_id": 10526,
      "name": "OpenMV",
      "summary": "Python-powered machine vision modules",
      "description": "The OpenMV project aims at making machine vision more accessible to beginners by developing a user-friendly, open-source, low-cost machine vision platform.\r\n\r\nOpenMV cameras are programmable in Python3 and come with an extensive set of image processing functions such as face detection, keypoints descriptors, color tracking, QR and Bar codes decoding, AprilTags, GIF and MJPEG recording and more.\r\n\r\nAdditionally, OpenMV includes a cross-platform IDE (based on Qt Creator) designed specifically to support programmable cameras. The IDE allows viewing the camera&apos;s frame buffer, accessing sensor controls, uploading scripts to the camera via serial over USB (or WiFi/BLE if available) and includes a set of image processing tools to generate tags, thresholds, keypoints etc...\r\n\r\nThe OpenMV project is a THP semifinalist and was successfully funded via Kickstarter back in 2015 and has come a long way since then.",
      "image_url": "https://cdn.hackaday.io/images/5817461406329458960.JPG",
      "views": 221464,
      "comments": 211,
      "followers": 4404,
      "skulls": 1440,
      "logs": 19,
      "details": 1,
      "instruction": 0,
      "components": 10,
      "images": 6,
      "created": 1401763612,
      "updated": 1616612738,
      "tags": [
        "camera",
        "OpenMV",
        "arm",
        "TheHackadayPrize",
        "python",
        "stm32f7",
        "machine vision",
        "ongoing project",
        "STm32f429",
        "STM32F407"
      ]
    },
    {
      "id": 5373,
      "url": "https://hackaday.io/project/5373-hack-chat",
      "owner_id": 182178,
      "name": "Hack Chat",
      "summary": "Use the team chat to talk about your projects and find collaborators for whatever you are working on.",
      "description": "If you need help on your project you&apos;ve come to the right place. <br>Click on the &quot;Public Chat&quot; button on the left top and you&apos;re automatically in. <br>Hack Chat guidelines: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://hackaday.io/pages/542\">https://hackaday.io/pages/542</a><br>All are welcome!",
      "image_url": "https://cdn.hackaday.io/images/7255311484679597966.png",
      "views": 61947,
      "comments": 190,
      "followers": 2622,
      "skulls": 1430,
      "logs": 0,
      "details": 1,
      "instruction": 1,
      "components": 0,
      "images": 3,
      "created": 1429655720,
      "updated": 1643030746,
      "tags": ["ongoing project"]
    },
    {
      "id": 19035,
      "url": "https://hackaday.io/project/19035-zerophone-a-raspberry-pi-smartphone",
      "owner_id": 61401,
      "name": "ZeroPhone - a Raspberry Pi smartphone",
      "summary": "Pi Zero-based open-source mobile phone (that you can assemble for 50$ in parts)",
      "description": "This is a mobile phone that:\r\n\r\n- First and foremost, will be a well-working reliable phone\r\n- Is as open-source as possible *while also being cheap*\r\n- Can be assembled and repaired independently\r\n- Is easy to get parts for\r\n- Doesn&apos;t have apps with privacy concerns\r\n- Allows to write your own apps in Python\r\n\r\nIt costs about 50$ in parts, and all the parts are available on eBay/TaoBao/etc, most of the phone can be assembled with just a soldering iron. User interface is written using Python \r\nand is being morphed into a lightweight phone-tailored UI framework.\r\n\r\nA crowdfunded manufacturing run is expected in a month - kits will be available, as well as a small batch of fully-assembled phones. Subscribe to newsletter below!",
      "image_url": "https://cdn.hackaday.io/images/7473031508515021059.jpg",
      "views": 407670,
      "comments": 155,
      "followers": 1870,
      "skulls": 1319,
      "logs": 50,
      "details": 1,
      "instruction": 10,
      "components": 27,
      "images": 5,
      "created": 1482175178,
      "updated": 1643030746,
      "tags": [
        "Phone",
        "pi zero",
        "raspberry pi",
        "ongoing project",
        "hardware",
        "mobile phone",
        "2017HackadayPrize",
        "GSM",
        "zerophone"
      ]
    },
    {
      "id": 13466,
      "url": "https://hackaday.io/project/13466-raspberry-pi-smart-mirror",
      "owner_id": 148563,
      "name": "Raspberry Pi Smart Mirror",
      "summary": "A mirror which displays applications, other useful information",
      "description": "In this video, we show you how to make an easy raspberry pi powered home smart mirror. It displays applications so that you can check the weather and local news while you are getting ready in the morning. It&apos;s also modular, so you can easy move it around or hang it on the wall if you like.  We&apos;ve created a basic application that you can run on the mirror, but it&apos;s totally customizable if you want to write some of your own code. <br><br>In the future, we plan to add AI components to make this fully automated. We are drawing inspiration from this project:  <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.youtube.com/watch?v=sc9UbREmo58\">https://www.youtube.com/watch?v=sc9UbREmo58</a>. Stay tuned for a future video about that!<br><br>Find all our 3D printable files on our Patreon: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.patreon.com/hackershack\">https://www.patreon.com/hackershack</a>",
      "image_url": "https://cdn.hackaday.io/images/4075911473092005133.jpg",
      "views": 209019,
      "comments": 31,
      "followers": 2156,
      "skulls": 1315,
      "logs": 0,
      "details": 1,
      "instruction": 0,
      "components": 6,
      "images": 1,
      "created": 1473092117,
      "updated": 1590942314,
      "tags": ["Software", "raspberry pi", "hardware", "completed project"]
    },
    {
      "id": 178243,
      "url": "https://hackaday.io/project/178243-lucidgloves-vr-haptic-gloves-on-a-budget",
      "owner_id": 1177524,
      "name": "LucidGloves: VR Haptic Gloves on a budget",
      "summary": "A functional glove that lets you use AND FEEL your hands in VR.",
      "description": "This is a project to try to make VR Haptic Glove technology more available for the public. Currently, most VR Haptic Glove products out there are extremely expensive and are targeted for commercial use. In starting this project, I wanted to create a budget, but still well-functioning VR haptic and finger tracking glove that&apos;s cheap and easy for people to get their hands on (or in, lol), and that works **Inside actual VR games**.\r\n\r\nhttps://www.tiktok.com/@lucas_vrtech\r\nhttps://www.youtube.com/c/lucasvrtech\r\nhttps://discord.gg/lucidvr\r\n\r\nPrototype 4 costs about $30 per hand.\r\n\r\nOriginally, this was just a fun quarantine project to keep me busy, but 500,000 followers later, this project is now much more than that. My goal now is to spread this project as far as possible and hopefully help more people fall in love with Virtual Reality.\r\n\r\nCurrently, the project is in prototype 4 but I&apos;m innovating constantly to improve the gloves.",
      "image_url": "https://cdn.hackaday.io/images/7644471641344614865.png",
      "views": 201128,
      "comments": 112,
      "followers": 2060,
      "skulls": 1285,
      "logs": 2,
      "details": 1,
      "instruction": 0,
      "components": 0,
      "images": 4,
      "created": 1615753037,
      "updated": 1642187766,
      "tags": ["ongoing project", "virtual reality"]
    },
    {
      "id": 12211,
      "url": "https://hackaday.io/project/12211-arduino-glasses-a-hmd-for-multimeter",
      "owner_id": 55607,
      "name": "Arduino Glasses a HMD for Multimeter",
      "summary": "Building an HMD with no special parts, to make work easier and safer",
      "description": "Trying to build a cheap Arduino Data Glasses for everybody.<br>It&apos;s working, and now it can even help to avoid accidents. From the first idea to the working prototype, it took 4 Month<br><br>The challenge was, that It should be constructed out of common materials that can be found easily.<br>The project is more about how to build the optical system for this HMD<br>I have a few ideas and one of them is to connect it to a Multimeter over Bluetooth to get the Data right in front of my eyes.<br>One thing is clear, you can not just place a screen in front of your eyes, because it will not be possible for them to focus it.<br><br>In the logs you can see from the first tests to what I have now. <br>The whole project runs under Open Source License.<br><br>And please, if you use my design, do not forget to mention that it is based on my idea and add a link to my homepage <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alainsprojects.com\">www.alainsprojects.com</a>.<br>Thank y",
      "image_url": "https://cdn.hackaday.io/images/2744261482922947650.jpg",
      "views": 346710,
      "comments": 149,
      "followers": 1681,
      "skulls": 1243,
      "logs": 37,
      "details": 1,
      "instruction": 6,
      "components": 9,
      "images": 6,
      "created": 1465843545,
      "updated": 1643030746,
      "tags": [
        "bluetooth",
        "head mounted display",
        "hardware",
        "arduino data glass",
        "cheap",
        "arduino",
        "2016HackadayPrize",
        "GOOGLE GLASS",
        "hmd",
        "wearable",
        "ongoing project"
      ]
    },
    {
      "id": 1538,
      "url": "https://hackaday.io/project/1538-portablesdr",
      "owner_id": 9087,
      "name": "PortableSDR",
      "summary": "Fully stand-alone HF (Shortwave) Software Defined Transceiver & Vector Network Analyzer. Designed for rugged portable use. Highly hackable.",
      "description": "The PSDR is a completely stand-alone (no computer needed), compact, Portable Software Defined Transceiver (hence the name, sorta). Originally designed for backpacking use by Ham Radio operators. It includes complete coverage up to about 30Mhz (plus 144Mhz), it has a 168Mhz ARM processor, color display, and an innovative interface.\r\n\r\nVector Network Analysis (which includes antenna analysis) and GPS functions are included.\r\n\r\nThe entire design is Open Source. The electronics are designed and laid out to be easy to understand and tinker with. In addition to source code, schematics, board layout and parts lists, articles and videos describing the theory of the design are being created.",
      "image_url": "https://cdn.hackaday.io/images/7760611421216476601.jpg",
      "views": 211728,
      "comments": 200,
      "followers": 2510,
      "skulls": 1118,
      "logs": 28,
      "details": 1,
      "instruction": 8,
      "components": 16,
      "images": 6,
      "created": 1403234611,
      "updated": 1598638209,
      "tags": [
        "ham radio",
        "ongoing project",
        "Amateur Radio",
        "rf",
        "PortableSDR",
        "SDR",
        "arm",
        "VNA",
        "radio",
        "PSDR",
        "STM32",
        "TheHackadayPrize"
      ]
    },
    {
      "id": 11583,
      "url": "https://hackaday.io/project/11583-odrive-high-performance-motor-control",
      "owner_id": 137318,
      "name": "ODrive - High performance motor control",
      "summary": "Hobby brushless motors are incredibly cheap and powerful. However we need a way to make robots out of them. ODrive is that way.",
      "description": "Stepper motors are ubiquitous in hobby robotics projects: If you make a robotics or automation project today, it is very likely you will use them. Almost all DIY projects from 3D printers and CNC mills, to air hockey and juggling robots use them. However in industrial automation, brushless servomotors have taken over, and it&apos;s clear why: They don&apos;t lose steps, are much more powerful, efficient, and silent.\r\n\r\nHowever, brushless motors are not unique to expensive industrial automation equipment. In fact, you can get some very powerful and cheap motors at hobby shops. The electronics to drive these motors are also dirt cheap. So how come virtually no non-industrial automation systems use them?\r\n\r\nTo be honest, I have no idea. Seriously, a driver that allows this should clearly exist.\r\nBut since it didn&apos;t, I decided to make one.\r\n\r\nAnd you are invited!\r\nThis project is open source, both in hardware and software, and I warmly welcome anyone who wants to join.",
      "image_url": "https://cdn.hackaday.io/images/250351491775911522.jpg",
      "views": 208779,
      "comments": 186,
      "followers": 5877,
      "skulls": 1064,
      "logs": 32,
      "details": 1,
      "instruction": 0,
      "components": 0,
      "images": 4,
      "created": 1462442996,
      "updated": 1643030746,
      "tags": [
        "Robotics",
        "2016HackadayPrize",
        "motor control",
        "Motor",
        "brushless motor",
        "automation",
        "hardware",
        "servo motor",
        "servo",
        "ongoing project",
        "control",
        "Motor drive",
        "high power"
      ]
    },
    {
      "id": 2040,
      "url": "https://hackaday.io/project/2040-web-security-everywhere",
      "owner_id": 19546,
      "name": "Web security everywhere",
      "summary": "Secure your Internet, control your data, fight censorship.\r\nBring your autonomous all in one privacy device everywhere.",
      "description": "In a world where digital privacy doesn't exist anymore, where journalists couldn't securely do their work, where companies are spyed upon by various entities, and where Human Rights are cynically disregarded, there is an urgent need for an easy-to-use tool to restore digital privacy.\r\n\r\nThis autonomous device uses the available connectivity to build a secure access-point and bypasses internet filters to connect to a remote network, use a secured internet or even browse anonymously.\r\nConnect your laptop/smartphone to the device's secured wifi access-point, no additional setup is needed. Enjoy a secured internet anywhere, anytime.\r\n\r\nIt could connect the internet via a public wifi access-point, 3G internet via phone usb/wifi tethering, corporate cable network, or even your own router/ADSL box.\r\n\r\nIt is very easy to use with its touch control interface and its fully automatized functions.\r\n\r\nIt could run autonomously during several hours on its internal battery.",
      "image_url": "https://cdn.hackaday.io/images/8176021410091861327.JPG",
      "views": 192822,
      "comments": 38,
      "followers": 4793,
      "skulls": 986,
      "logs": 31,
      "details": 1,
      "instruction": 6,
      "components": 10,
      "images": 5,
      "created": 1406155716,
      "updated": 1580305832,
      "tags": [
        "security",
        "2015HackadayPrize",
        "TheHackadayPrize",
        "wifi",
        "ongoing project",
        "ROUTER",
        "raspberry pi",
        "accesspoint",
        "internet",
        "vpn",
        "web",
        "TOR"
      ]
    },
    {
      "id": 283,
      "url": "https://hackaday.io/project/283-pcb-mill-for-under-10",
      "owner_id": 894,
      "name": "PCB mill for under $10",
      "summary": "pcb mill built from garbage using basic hand tools and little money",
      "description": "A gradually improving attempt to make a useful pcb mill out of a printer and other assorted garbage, with a minimal budget and no fancy tools. It works!, but let's see how much better it can be.",
      "image_url": "https://cdn.hackaday.io/images/9555871394520169199.jpg",
      "views": 224698,
      "comments": 61,
      "followers": 2578,
      "skulls": 981,
      "logs": 9,
      "details": 1,
      "instruction": 0,
      "components": 11,
      "images": 6,
      "created": 1393891681,
      "updated": 1552165567,
      "tags": [
        "plotter",
        "ongoing",
        "garbage",
        "pcb mill",
        "arduino",
        "cheap",
        "vector graphics"
      ]
    },
    {
      "id": 1395,
      "url": "https://hackaday.io/project/1395-open-source-science-tricorder",
      "owner_id": 11110,
      "name": "Open Source Science Tricorder",
      "summary": "Science in your hand.  A pocket-sized instrument capable of visualizing and exploring the world around you. ",
      "description": "It is my deep belief that knowledge brings about positive change. \r\n\r\nWe could live in a world where the same instrument that can show a child how much chlorophyll is in a leaf could also show how them much pollution is in the air around us, or given off by one's car. As an educator and a researcher, I feel that if people could easily discover things about their worlds that were also important social topics, that they would then make positive social choices, like reducing their emissions, or petitioning for cleaner industry in their communities. \r\n\r\nBy having access to general inexpensive sensing tools, people can learn about healthy leaves, clean air, clouds and the water cycle, energy efficient homes — and visualize abstract concepts like spectra or magnetism.\r\n\r\nAs a tool for exploration, we can discover things around us that we don't already know. And that's what it's about. Little discoveries, everywhere. ",
      "image_url": "https://cdn.hackaday.io/images/3776181414477226534.jpg",
      "views": 131737,
      "comments": 96,
      "followers": 4506,
      "skulls": 973,
      "logs": 17,
      "details": 1,
      "instruction": 3,
      "components": 31,
      "images": 6,
      "created": 1402115599,
      "updated": 1625889230,
      "tags": ["TheHackadayPrize", "Tricorder", "sensor", "sensing"]
    },
    {
      "id": 364,
      "url": "https://hackaday.io/project/364-mipi-dsi-display-shieldhdmi-adapter",
      "owner_id": 1867,
      "name": "MIPI DSI Display Shield/HDMI Adapter",
      "summary": "A controller for LCD/OLED screens with MIPI DSI interface. Arduino shield format, HDMI-to-DSI adapter & built-in framebuffer.",
      "description": "A simple controller for MIPI DSI displays, based on a Xilinx Spartan-6 FPGA.\r\n\r\nMIPI DSI is a high speed packet-based interface for delivering video data to LCD/OLED displays. In a way it is similar to DisplayPort, with a more power-conscious (and thus complex) physical layer. DSI is mostly used in mobile devices (smartphones & tablets).\r\n\r\nI started this project as the base for building a low-cost HD projector. Later on I realized it could be also useful for VR applications and as a general-purpose graphics card for small uCs - that's why it comes in Arduino shield format.\r\n\r\n\r\n",
      "image_url": "https://cdn.hackaday.io/images/3898291408351694409.jpg",
      "views": 399796,
      "comments": 210,
      "followers": 1521,
      "skulls": 931,
      "logs": 8,
      "details": 1,
      "instruction": 5,
      "components": 11,
      "images": 5,
      "created": 1394462087,
      "updated": 1516132454,
      "tags": [
        "Xilinx",
        "LCD",
        "FPGA",
        "completed project",
        "open source",
        "arduino",
        "screen",
        "graphics",
        "mipi dsi",
        "oled",
        "open hardware"
      ]
    },
    {
      "id": 11224,
      "url": "https://hackaday.io/project/11224-mechaduino",
      "owner_id": 79693,
      "name": "Mechaduino",
      "summary": "Mechaduino is an affordable, open-source, industrial servo motor. Position, torque, velocity, and custom modes. Arduino compatible.   ",
      "description": "Engineers use servo motors to achieve the precision motion required in applications such as robotics, automation, and CNC manufacturing.  Like RC servos, industrial servos actively correct for external disturbances.  Unlike RC servos, industrial servos can provide very accurate motion, and often support advanced motion control modes.  Unfortunately the cost of industrial servos is prohibitive to the individual maker (thousands of dollars per motor).\r\n\r\nWe&apos;ve been developing an affordable open-source industrial servo motor, opening the door to sophisticated mechatronics applications.  Our design leverages the low cost of mass produced stepper motors.  We are able to achieve very high resolution via 14b encoder feedback (after calibration routine!).  For more information, including demos of our working prototypes, check out the external links (below to the left).\r\n\r\n",
      "image_url": "https://cdn.hackaday.io/images/7179091466050082924.JPG",
      "views": 134358,
      "comments": 171,
      "followers": 4322,
      "skulls": 850,
      "logs": 26,
      "details": 1,
      "instruction": 8,
      "components": 7,
      "images": 6,
      "created": 1461338842,
      "updated": 1649946617,
      "tags": [
        "Robotics",
        "ARDUINO ZERO",
        "STEPPER",
        "Anticogging",
        "Motor",
        "ongoing project",
        "servo",
        "Mechaduino",
        "hardware",
        "closed loop",
        "ROBOT",
        "2016HackadayPrize",
        "feedback",
        "control",
        "SAMD21",
        "Mechatronics"
      ]
    },
    {
      "id": 164932,
      "url": "https://hackaday.io/project/164932-axiom-100kw-motor-controller",
      "owner_id": 402462,
      "name": "Axiom: 100+kW Motor Controller",
      "summary": "High Power, High Performance 400V 300A 100+kW Motor Controller fully compatible with VESC®",
      "description": "For the first time in history, Axiom provides clear, wide open access to the precise control of large 3 phase motors. And it couldn&apos;t be more timely, billions are spent accelerating the incoming era of electric vehicles, with massive EV fleet growth, and so many small and big companies competing to have a dominating role in the future of transportation.\r\n\r\nIt is put together by Marcos -MIT TR35-, endless-sphere forum legend HighHopes, 1/4 mile EV WORLD RECORD HOLDER Arlo1, highest-engineering-grades Maxi, and using, improving and accelerating the cult-following work of Benjamin Vedder with a stream of new firmware code to make humanity better at spinning motors!\r\n\r\nIt&#x2019;s not only a feature rich high performance controller, it also comes in a power dense package. The best part of course is the hardware and firmware are open source! Making the schematic, BOM, and code available for everyone to experiment and improve, its the ideal platform for vehicles, research and industries",
      "image_url": "https://cdn.hackaday.io/images/3828301564863319715.jpg",
      "views": 118765,
      "comments": 50,
      "followers": 962,
      "skulls": 817,
      "logs": 27,
      "details": 1,
      "instruction": 4,
      "components": 5,
      "images": 6,
      "created": 1554994894,
      "updated": 1592493884,
      "tags": [
        "VESC",
        "Axiom",
        "FPGA",
        "igbt",
        "highhopes",
        "Osh",
        "IceStorm",
        "endless sphere",
        "Motor",
        "motor controller",
        "spm motor",
        "open source",
        "foc",
        "marcos",
        "hardware",
        "freecad",
        "ipm",
        "STM32",
        "ongoing project",
        "arlo1",
        "High voltage",
        "2019hackadayprize",
        "kicad",
        "high power",
        "field oriented control",
        "gcc"
      ]
    },
    {
      "id": 1552,
      "url": "https://hackaday.io/project/1552-lofi",
      "owner_id": 8416,
      "name": "LoFi",
      "summary": "LoFi is a very low cost ($5), small, auto-transmitting module. Preassembled and preprogrammed. Simply attach to your appliances or projects!",
      "description": "Like many hackers and hobbyists, we dream of a smart home. Although there are third-party transceiver modules and data loggers on the market, they are too expensive and complicated to deploy in volume.\r\n\r\nLoFi is a very low cost ($5), small, auto-transmitting module. All you need to do is to attach the modules to interesting appliance circuit points or sensors throughout your home and garden. The data arrives on your PC or can be sent to the Internet with a WiFi hotspot.\r\n\r\nNo programming, no protocols to learn, and no carrier boards for you to make. Just attach!\r\n\r\nUsing your desktop or laptop, you can set trigger levels on individual modules to tell them when to transmit. For example, send an update when the voltage changes by more than 1 V on the vibration sensor near the garage door opener. You can also set the module on a timer, such as hourly on your garden monitor.\r\n\r\nThe possibilities are endless!",
      "image_url": "https://cdn.hackaday.io/images/4127341403290759360.png",
      "views": 115674,
      "comments": 95,
      "followers": 1567,
      "skulls": 795,
      "logs": 13,
      "details": 1,
      "instruction": 16,
      "components": 9,
      "images": 6,
      "created": 1403291842,
      "updated": 1594494402,
      "tags": [
        "attiny",
        "433 MHz",
        "iot",
        "TheHackadayPrize",
        "Sensors",
        "internet",
        "wireless",
        "Phant"
      ]
    },
    {
      "id": 12989,
      "url": "https://hackaday.io/project/12989-thor",
      "owner_id": 144585,
      "name": "Thor",
      "summary": "OpenSource 3D printable Robotic Arm",
      "description": "Important Note: Go to <a href=\"http://thor.angel-lm.com/\">Thor&apos;s Website</a> to download the latest version!\r\n\r\nThor is an Open Source and printable robotic arm with six degrees of freedom. Its configuration (yaw&#xAD;-roll&#xAD;-roll&#xAD;-yaw&#xAD;-roll&#xAD;-yaw) is the same one that is used on most manipulator robots that currently exist in the market.\r\n\r\nIn its upright position, Thor is about 625mm and it can lift objects up to 750 grams.\r\n\r\nThe main purpose of this project was to design a robot that could be used in universities and schools to teach robotics.With this in mind, the design had to be affordable and accessible. Releasing the source files and doing so under an open source licence was the best option: anyone could study any element of the robot in depth and, moreover, modify or adapt it to their needs.",
      "image_url": "https://cdn.hackaday.io/images/783551470235335866.jpg",
      "views": 279688,
      "comments": 85,
      "followers": 3785,
      "skulls": 794,
      "logs": 17,
      "details": 1,
      "instruction": 6,
      "components": 51,
      "images": 4,
      "created": 1470235128,
      "updated": 1637758262,
      "tags": [
        "Robotics",
        "2016HackadayPrize",
        "3d printing",
        "ongoing project",
        "hardware",
        "automation",
        "electronics"
      ]
    },
    {
      "id": 1340,
      "url": "https://hackaday.io/project/1340-satnogs-global-network-of-ground-stations",
      "owner_id": 1611,
      "name": "SatNOGS - Global Network of Ground Stations",
      "summary": "SatNOGS is an open source satellite ground station network, optimized for modularity, built using affordable tools and resources.",
      "description": "SatNOGS project is a complete platform for an open source Satellite Ground Station Network. The scope of the project is to create a full stack of open technologies based on open standards , and the construction of a full ground station as a showcase of the stack.\r\nSatNOGS provides the basis for:\r\n\r\n    Bulk manufacturing and deployment of affordable Satellite Ground Stations\r\n    Modular design for integration with existing and future technologies\r\n    A platform for a variety of instrumentation around Satellite Ground Station operations\r\n    A firm platform for a Ground Station collaborative network (one to one, one to many, many to many)\r\n    A community based approach on Ground Station development\r\n    A solution for massive automation of operator-less Ground Stations based on open standards\r\n\r\nCheck out our documentation on the website for detailed info.",
      "image_url": "https://cdn.hackaday.io/images/7657121401903408421.jpg",
      "views": 118318,
      "comments": 42,
      "followers": 1841,
      "skulls": 784,
      "logs": 26,
      "details": 1,
      "instruction": 2,
      "components": 9,
      "images": 6,
      "created": 1401903437,
      "updated": 1594494402,
      "tags": [
        "TheHackadayPrize",
        "open",
        "ongoing project",
        "tracking",
        "ground Station",
        "Satellite"
      ]
    },
    {
      "id": 114738,
      "url": "https://hackaday.io/project/114738-automatic-infinite-3d-printer",
      "owner_id": 163046,
      "name": "Automatic Infinite 3D Printer",
      "summary": "The Automatic Infinite 3D Printer (i3D) gives anyone the power of a factory.",
      "description": "Latest Build: https://youtu.be/gruBm8ppwgY\r\n\r\n3D printing has the potential to democratize manufacturing. Since 3D printers are easy to use and low cost, they allow anyone to make incredibly complex things. I&apos;m confident that anyone reading this has seen something cool made on a low cost hobby grade 3D printer. The technology has opened up new doors to makers and hackers.\r\n\r\nHowever the capabilities of 3D printers are limited by requirement of human operation. The need of manual part removal prevents 3D printers from being used for mass production purposes. Therefore, the purpose of this project is to build a fully autonomous 3D printer. A 3D printer that can print a continuous stream of parts without user interaction. The finished machine is capable of independently ejecting and starting print jobs. Additional, the 3D printer&apos;s conveyor belt mechanism allows it make infinitely long prints.",
      "image_url": "https://cdn.hackaday.io/images/6205861540205408609.jpg",
      "views": 156114,
      "comments": 53,
      "followers": 3444,
      "skulls": 757,
      "logs": 28,
      "details": 1,
      "instruction": 11,
      "components": 17,
      "images": 6,
      "created": 1522650562,
      "updated": 1644059789,
      "tags": [
        "python",
        "electron",
        "3d printing",
        "automation",
        "hardware",
        "2018hackadayprize",
        "node.js",
        "ConveyOr Belt",
        "Robotics",
        "ongoing project"
      ]
    },
    {
      "id": 20458,
      "url": "https://hackaday.io/project/20458-osug-open-source-underwater-glider",
      "owner_id": 207659,
      "name": "OSUG: Open-Source Underwater Glider",
      "summary": "A versatile autonomous environmental drone using a buoyancy engine",
      "description": "There has been a breakthrough with low cost autonomous drones and as this capability has matured a wide range of hobby and commercial applications have developed. There are no affordable extended duration underwater exploration platforms and this project aims to address this need.\r\n\r\nUtilising commodity hardware, 3D printed parts and an open-source autopilot, I aim to produce a low cost and versatile underwater glider capable of extended missions of up to weeks at a time. I hope that by having this platform available, it would reduce the cost of underwater projects for all, from hobbyists, amateur scientists to seafood farmers.",
      "image_url": "https://cdn.hackaday.io/images/4599881501784526370.jpg",
      "views": 136041,
      "comments": 62,
      "followers": 4399,
      "skulls": 744,
      "logs": 32,
      "details": 1,
      "instruction": 25,
      "components": 73,
      "images": 6,
      "created": 1490048829,
      "updated": 1617109477,
      "tags": [
        "UAV",
        "Underwater",
        "atmel",
        "buoyancy",
        "ongoing project",
        "hardware",
        "monitering",
        "engine",
        "2017HackadayPrize",
        "environment",
        "Glider"
      ]
    },
    {
      "id": 21581,
      "url": "https://hackaday.io/project/21581-flexible-smartwatch",
      "owner_id": 11592,
      "name": "Flexible Smartwatch",
      "summary": "A 2.5mm thick flexible smart watch with e-ink display, BT 4.0, and health sensors.",
      "description": "This project aims to build a thin, flexible smartwatch. It&apos;s wrap-around display and touchscreen will allow it to display more data at a glance than current devices. Besides telling time and displaying notifications, the watch will feature pulse rate, blood oxygen, and step sensors for health monitoring.",
      "image_url": "https://cdn.hackaday.io/images/1579651493481311366.jpg",
      "views": 78477,
      "comments": 30,
      "followers": 1024,
      "skulls": 716,
      "logs": 1,
      "details": 1,
      "instruction": 0,
      "components": 0,
      "images": 3,
      "created": 1493478257,
      "updated": 1553701564,
      "tags": [
        "e-ink",
        "2017HackadayPrize",
        "wearable",
        "ongoing project",
        "hardware",
        "smartwatch",
        "eink"
      ]
    },
    {
      "id": 37,
      "url": "https://hackaday.io/project/37-feedback-hackadayio",
      "owner_id": 182178,
      "name": "Feedback - Hackaday.io",
      "summary": "Bugs, Feature Requests, Wishlists",
      "description": "Please leave a comment in this project to give us your feedback about your Hackaday.io experience.",
      "image_url": "https://cdn.hackaday.io/images/5487511392662156579.png",
      "views": 31020,
      "comments": 4476,
      "followers": 1065,
      "skulls": 679,
      "logs": 0,
      "details": 1,
      "instruction": 0,
      "components": 0,
      "images": 1,
      "created": 1390259421,
      "updated": 1617221474,
      "tags": ["feedback", "hackaday", "projects", "ongoing project"]
    },
    {
      "id": 164845,
      "url": "https://hackaday.io/project/164845-dlt-one-a-damn-linux-tablet",
      "owner_id": 10858,
      "name": "DLT one - A Damn Linux Tablet!",
      "summary": "Modular Open Source Hardware Tablet that is easy to hack and can run a standard Desktop Linux Distribution (or Android)",
      "description": "Proper Linux Tablets unfortunately just dont exist and certainly not ones that are also open hardware.\r\nI want hardware that does not lock me into a specific OS or cripples other options by the lack of drivers. I&apos;m also sick of the lack of modularity and repairability of modern hardware.\r\nSo I will create the following.\r\n\r\nA basic system for a modern and highly performant portable device (e.g. Tablet) in the 7-10&quot; form factor.\r\n\r\nThe electrical and mechanical design will allow for a multitude of form factors in the future, basing on a shared approach on how to interconnect hardware, so reuse between form factors will be possible.\r\n\r\nThese newly developed standards for modular portable devices will be open to everyone and the same goes for the design of the Tablet that is being developed here.\r\n\r\nFor more details please read my project logs and the detailed description below.\r\nThe development started with the HaD Prize 2019 and you will be able to follow every step of it.\r\n",
      "image_url": "https://cdn.hackaday.io/images/3412091569617482339.jpg",
      "views": 91543,
      "comments": 68,
      "followers": 918,
      "skulls": 676,
      "logs": 27,
      "details": 1,
      "instruction": 0,
      "components": 0,
      "images": 6,
      "created": 1554650186,
      "updated": 1608399708,
      "tags": [
        "open",
        "ongoing project",
        "linux",
        "Tablet",
        "hardware",
        "modular",
        "Phone",
        "2019hackadayprize"
      ]
    }
  ]
}
